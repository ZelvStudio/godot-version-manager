#!/usr/bin/env python3

import os
import subprocess as sp

import cli
import manager
from helpers import abort




# Parse arguments
args = cli.parse_args()

# Display help message when no args are passed.
if not cli.has_arguments():
    cli.print_help()
    exit()


if args.list:
    cli.display_versions()


if args.start:
    chosen_app, chosen_version = cli.pick_version()
    print(f'Launching {chosen_version}')
    p = sp.Popen(chosen_app, stdin=sp.DEVNULL, stdout=sp.DEVNULL, stderr=sp.DEVNULL)


if args.start_local:
    with open('.gvm') as version_file:
        local_version = version_file.read()
    app = manager.get_app_from_version(local_version)
    print(f'Launching {local_version}')
    p = sp.Popen([app, '-e'], stdin=sp.DEVNULL, stdout=sp.DEVNULL, stderr=sp.DEVNULL)


if args.use:
    chosen_app, chosen_version = cli.pick_version()
    manager.install(chosen_app)
    print(f'Using {chosen_version}')


if args.use_local:
    chosen_app, chosen_version = cli.pick_version()
    manager.local_install(chosen_app)
    print(f'Using {chosen_version} in current folder')


if args.add:
    manager.add_archive(args.add)


if args.delete:
    chosen_app, chosen_version = cli.pick_version()
    match input(f'Are you sure you want to delete {chosen_version}? [y/N]: '):
        case 'y':
            os.remove(chosen_app)
            print(f'Deleted {chosen_version}')
        case other:
            abort()


if args.install:
    godot_file = manager.add_archive(args.install)

    print(f'Installing to {manager.INSTALL_PATH}')
    manager.install(godot_file)
